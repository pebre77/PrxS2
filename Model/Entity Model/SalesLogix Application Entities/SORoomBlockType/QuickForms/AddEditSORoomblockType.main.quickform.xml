<?xml version="1.0" encoding="utf-8"?>
<QuickFormDefinition Id="dd902eeb-dadd-41ba-a1a0-6ade881cbee2" name="AddEditSORoomblockType">
  <Properties>
    <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
    <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
    <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
    <Property name="UseEntityNameAsTitle" type="System.Boolean">True</Property>
    <Property name="ImagePath" type="System.String"></Property>
    <Property name="DefinitionType" type="System.String">Sage.Platform.QuickForms.QuickFormMainDetailViewDefinition, Sage.Platform.QuickForms</Property>
    <Property name="Columns" type="System.ComponentModel.BindingList`1[[System.Windows.Forms.ColumnStyle, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><ArrayOfColumnStyle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><ColumnStyle><SizeType>Percent</SizeType><Width>25</Width></ColumnStyle><ColumnStyle><SizeType>Percent</SizeType><Width>40</Width></ColumnStyle><ColumnStyle><SizeType>Percent</SizeType><Width>35</Width></ColumnStyle></ArrayOfColumnStyle></Property>
    <Property name="Rows" type="System.ComponentModel.BindingList`1[[System.Windows.Forms.RowStyle, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><ArrayOfRowStyle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle></ArrayOfRowStyle></Property>
    <Property name="GeneratePrintView" type="System.Boolean">False</Property>
    <Property name="Description" type="System.String"></Property>
    <Property name="ActiveControl" type="System.String"></Property>
  </Properties>
  <LoadActions>
    <ActionDefinition>
      <ResourceKey>f933b230-4de4-40ac-92c2-6bd9b5080efd</ResourceKey>
      <RootActionName>CSharpSnippetAction</RootActionName>
      <Action>
        <CSharpCodeSnippet><![CDATA[
Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Charge Dates
if (EntityContext.EntityID.ToString() == "Insert") { 
	
	saleso.Salesorderid =  DialogService.DialogParameters["SalesOrderId"].ToString();
	txtSOID.Text = DialogService.DialogParameters["SalesOrderId"].ToString();
}

Sage.Entity.Interfaces.ISalesOrder currentso = Sage.Platform.EntityFactory.GetRepository<Sage.Entity.Interfaces.ISalesOrder>().FindFirstByProperty("Id",txtSOID.Text);
//Charge Dates
DateTime vcurdate =  currentso.SORoomBlock.MainArrivalDate.Value;

RoomDate1.DateTimeValue =  vcurdate.AddDays(-4);
saleso.RoomDate1 = RoomDate1.DateTimeValue.Value;
RoomDate2.DateTimeValue =  vcurdate.AddDays(-3);
saleso.RoomDate2 = RoomDate2.DateTimeValue.Value;
ROOMDATE3.DateTimeValue =  vcurdate.AddDays(-2);
saleso.ROOMDATE3 = ROOMDATE3.DateTimeValue.Value;
RoomDate4.DateTimeValue =  vcurdate.AddDays(-1);
saleso.RoomDate4 = RoomDate4.DateTimeValue.Value;
RoomDate5.DateTimeValue =  vcurdate;
saleso.RoomDate5 = RoomDate5.DateTimeValue.Value;
RoomDate6.DateTimeValue =  vcurdate.AddDays(1);
saleso.RoomDate6 = RoomDate6.DateTimeValue.Value;
RoomDate7.DateTimeValue =  vcurdate.AddDays(2);
saleso.RoomDate7 = RoomDate7.DateTimeValue.Value;
RoomDate8.DateTimeValue =  vcurdate.AddDays(3);
saleso.RoomDate8 = RoomDate8.DateTimeValue.Value;
RoomDate9.DateTimeValue =  vcurdate.AddDays(4);
saleso.RoomDate9 = RoomDate9.DateTimeValue.Value;
RoomDate10.DateTimeValue =  vcurdate.AddDays(5);
saleso.RoomDate10 = RoomDate10.DateTimeValue.Value;
RoomDate11.DateTimeValue =  vcurdate.AddDays(6);
saleso.RoomDate11= RoomDate11.DateTimeValue.Value;
RoomDate12.DateTimeValue =  vcurdate.AddDays(7);
saleso.RoomDate12= RoomDate12.DateTimeValue.Value;
RoomDate13.DateTimeValue =  vcurdate.AddDays(8);
saleso.RoomDate13= RoomDate13.DateTimeValue.Value;
RoomDate14.DateTimeValue =  vcurdate.AddDays(9);
saleso.RoomDate14= RoomDate14.DateTimeValue.Value;
RoomDate15.DateTimeValue =  vcurdate.AddDays(10);
saleso.RoomDate15= RoomDate15.DateTimeValue.Value;
RoomDate16.DateTimeValue =  vcurdate.AddDays(11);
saleso.RoomDate16= RoomDate16.DateTimeValue.Value;
RoomDate17.DateTimeValue =  vcurdate.AddDays(12);
saleso.RoomDate17 = RoomDate17.DateTimeValue.Value;
RoomDate18.DateTimeValue =  vcurdate.AddDays(13);
saleso.RoomDate18 = RoomDate18.DateTimeValue.Value;


//Revenue Visible or Not
bool vActual = currentso.Actual.Value;
if (vActual == true) {
	ActualRoomRevenue.Visible = true;
	ActualRevenue1.Visible = true;
	ActualRevenue2.Visible = true;
	ActualRevenue3.Visible = true;
	ActualRevenue4.Visible = true;
	ActualRevenue5.Visible = true;
	ActualRevenue6.Visible = true;
	ActualRevenue7.Visible = true;
	ActualRevenue8.Visible = true;
	ActualRevenue9.Visible = true;
	ActualRevenue10.Visible = true;
	ActualRevenue11.Visible = true;
	ActualRevenue12.Visible = true;
	ActualRevenue13.Visible = true;
	ActualRevenue14.Visible = true;
	ActualRevenue15.Visible = true;
	ActualRevenue16.Visible = true;
	ActualRevenue17.Visible = true;
	ActualRevenue18.Visible = true;
} else {
	ActualRoomRevenue.Visible = false;
	ActualRevenue1.Visible = false;
	ActualRevenue2.Visible = false;
	ActualRevenue3.Visible = false;
	ActualRevenue4.Visible = false;
	ActualRevenue5.Visible = false;
	ActualRevenue6.Visible = false;
	ActualRevenue7.Visible = false;
	ActualRevenue8.Visible = false;
	ActualRevenue9.Visible = false;
	ActualRevenue10.Visible = false;
	ActualRevenue11.Visible = false;
	ActualRevenue12.Visible = false;
	ActualRevenue13.Visible = false;
	ActualRevenue14.Visible = false;
	ActualRevenue15.Visible = false;
	ActualRevenue16.Visible = false;
	ActualRevenue17.Visible = false;
	ActualRevenue18.Visible = false;
}
	



//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();


//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);

]]></CSharpCodeSnippet>
      </Action>
      <IsDialogCloseAction>False</IsDialogCloseAction>
      <RunOnEveryRePaint>False</RunOnEveryRePaint>
      <DialogActionResult>NoResult</DialogActionResult>
      <PerformsUpdate>False</PerformsUpdate>
      <AppliedSecurity />
    </ActionDefinition>
  </LoadActions>
  <QuickFormElements>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate1</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>3</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate1</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate1</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate1</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String"></Property>
        <Property name="EntityNamespace" type="System.String"></Property>
        <Property name="EntityAssemblyName" type="System.String"></Property>
        <Property name="DefaultNamespace" type="System.String"></Property>
        <Property name="AssemblyName" type="System.String"></Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="DesignerDisplayMember" type="System.String"></Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>4</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate2</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate2</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate2</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String"></Property>
        <Property name="EntityNamespace" type="System.String"></Property>
        <Property name="EntityAssemblyName" type="System.String"></Property>
        <Property name="DefaultNamespace" type="System.String"></Property>
        <Property name="AssemblyName" type="System.String"></Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="DesignerDisplayMember" type="System.String"></Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>5</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>ROOMDATE3</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ROOMDATE3</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ROOMDATE3</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String"></Property>
        <Property name="EntityNamespace" type="System.String"></Property>
        <Property name="EntityAssemblyName" type="System.String"></Property>
        <Property name="DefaultNamespace" type="System.String"></Property>
        <Property name="AssemblyName" type="System.String"></Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="DesignerDisplayMember" type="System.String"></Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>6</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate4</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate4</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate4</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String"></Property>
        <Property name="EntityNamespace" type="System.String"></Property>
        <Property name="EntityAssemblyName" type="System.String"></Property>
        <Property name="DefaultNamespace" type="System.String"></Property>
        <Property name="AssemblyName" type="System.String"></Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="DesignerDisplayMember" type="System.String"></Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>7</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate5</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate5</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate5</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String"></Property>
        <Property name="EntityNamespace" type="System.String"></Property>
        <Property name="EntityAssemblyName" type="System.String"></Property>
        <Property name="DefaultNamespace" type="System.String"></Property>
        <Property name="AssemblyName" type="System.String"></Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="DesignerDisplayMember" type="System.String"></Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>8</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate6</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate6</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate6</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate7</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>9</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate7</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate7</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate7</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate8</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>10</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate8</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate8</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate8</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate9</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>11</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate9</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate9</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate9</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String"></Property>
        <Property name="EntityNamespace" type="System.String"></Property>
        <Property name="EntityAssemblyName" type="System.String"></Property>
        <Property name="DefaultNamespace" type="System.String"></Property>
        <Property name="AssemblyName" type="System.String"></Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="DesignerDisplayMember" type="System.String"></Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>12</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate10</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate10</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate10</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate11</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>13</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate11</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate11</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate11</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate12</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>14</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate12</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate12</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate12</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate13</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>15</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate13</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate13</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate13</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate14</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>16</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate14</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate14</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate14</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate15</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>17</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate15</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate15</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate15</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate16</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>18</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate16</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate16</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate16</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate17</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>19</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate17</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate17</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate17</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">RoomDate18</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls"><QFDateTimePicker xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>20</Row><IsReadOnly>true</IsReadOnly><Enabled>false</Enabled><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>RoomDate18</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomDate18</DataItemName><ControlItemName>DateTimeValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomDate18</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><DateTimeValue xsi:nil="true" /><SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime><DateOnly>true</DateOnly><DisplayTime>false</DisplayTime><AutoPostBack>false</AutoPostBack><Timeless>false</Timeless></QFDateTimePicker></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">None</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>21</Row><IsReadOnly>false</IsReadOnly><Visible>false</Visible><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>txtSOID</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>Salesorderid</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>txtSOID</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String"></Property>
        <Property name="EntityNamespace" type="System.String"></Property>
        <Property name="EntityAssemblyName" type="System.String"></Property>
        <Property name="DefaultNamespace" type="System.String"></Property>
        <Property name="AssemblyName" type="System.String"></Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="DesignerDisplayMember" type="System.String"></Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXPickList, Sage.SalesLogix.QuickForms.QFControls"><QFSLXPickList xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>0</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>37</TabIndex><ControlId>RoomType</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomType</DataItemName><ControlItemName>PickListValue</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomType</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><Required>false</Required><AutoPostBack>false</AutoPostBack><PickListName>Sales Order Room Block Type</PickListName><StorageMode>Text</StorageMode><NameFormatString /><AllowMultiples>false</AllowMultiples><AlphaSort>false</AlphaSort><MustExistInList>false</MustExistInList><NoneEditable>false</NoneEditable><PickListId /><ValueStoredAsText>true</ValueStoredAsText></QFSLXPickList></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String"></Property>
        <Property name="EntityNamespace" type="System.String"></Property>
        <Property name="EntityAssemblyName" type="System.String"></Property>
        <Property name="DefaultNamespace" type="System.String"></Property>
        <Property name="AssemblyName" type="System.String"></Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="DesignerDisplayMember" type="System.String"></Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>1</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>38</TabIndex><ControlId>RoomRate</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>RoomRate</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>RoomRate</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String"></Property>
        <Property name="EntityNamespace" type="System.String"></Property>
        <Property name="EntityAssemblyName" type="System.String"></Property>
        <Property name="DefaultNamespace" type="System.String"></Property>
        <Property name="AssemblyName" type="System.String"></Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="DesignerDisplayMember" type="System.String"></Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>2</Row><IsReadOnly>true</IsReadOnly><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>TotalNbrRooms</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>TotalNbrRooms</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>TotalNbrRooms</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms1</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>3</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>1</TabIndex><ControlId>NbrRooms1</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms1</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms1</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[	Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}


saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms2</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>4</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>2</TabIndex><ControlId>NbrRooms2</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms2</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms2</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[	Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}


saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms3</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>5</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>3</TabIndex><ControlId>NbrRooms3</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms3</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms3</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[	Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms4</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>6</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>4</TabIndex><ControlId>NbrRooms4</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms4</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms4</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}


saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms5</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>7</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>5</TabIndex><ControlId>NbrRooms5</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms5</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms5</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms6</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>8</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>6</TabIndex><ControlId>NbrRooms6</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms6</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms6</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms7</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>9</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>7</TabIndex><ControlId>NbrRooms7</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms7</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms7</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms8</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>10</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>8</TabIndex><ControlId>NbrRooms8</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms8</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms8</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms9</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>11</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>9</TabIndex><ControlId>NbrRooms9</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms9</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms9</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms10</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>12</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>10</TabIndex><ControlId>NbrRooms10</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms10</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms10</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms11</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>13</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>11</TabIndex><ControlId>NbrRooms11</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms11</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms11</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}


saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms12</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>14</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>12</TabIndex><ControlId>NbrRooms12</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms12</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms12</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms13</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>15</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>13</TabIndex><ControlId>NbrRooms13</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms13</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms13</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms14</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>16</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>14</TabIndex><ControlId>NbrRooms14</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms14</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms14</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms15</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>17</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>15</TabIndex><ControlId>NbrRooms15</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms15</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms15</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}


saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms16</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>18</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>16</TabIndex><ControlId>NbrRooms16</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms16</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms16</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms17</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>19</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>17</TabIndex><ControlId>NbrRooms17</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms17</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms17</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">NbrRooms18</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms"><QFTextBox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>20</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>18</TabIndex><ControlId>NbrRooms18</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>NbrRooms18</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>NbrRooms18</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Rooms
double vTotalNbr = 0;
if (!String.IsNullOrEmpty(NbrRooms1.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms1.Text);
}
if (!String.IsNullOrEmpty(NbrRooms2.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms2.Text);
}
if (!String.IsNullOrEmpty(NbrRooms3.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms3.Text);
}
if (!String.IsNullOrEmpty(NbrRooms4.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms4.Text);
}
if (!String.IsNullOrEmpty(NbrRooms5.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms5.Text);
}
if (!String.IsNullOrEmpty(NbrRooms6.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms6.Text);
}
if (!String.IsNullOrEmpty(NbrRooms7.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms7.Text);
}
if (!String.IsNullOrEmpty(NbrRooms8.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms8.Text);
}
if (!String.IsNullOrEmpty(NbrRooms9.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms9.Text);
}
if (!String.IsNullOrEmpty(NbrRooms10.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms10.Text);
}
if (!String.IsNullOrEmpty(NbrRooms11.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms11.Text);
}
if (!String.IsNullOrEmpty(NbrRooms12.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms12.Text);
}
if (!String.IsNullOrEmpty(NbrRooms13.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms13.Text);
}
if (!String.IsNullOrEmpty(NbrRooms14.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms14.Text);
}
if (!String.IsNullOrEmpty(NbrRooms15.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms15.Text);
}
if (!String.IsNullOrEmpty(NbrRooms16.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms16.Text);
}
if (!String.IsNullOrEmpty(NbrRooms17.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms17.Text);
}
if (!String.IsNullOrEmpty(NbrRooms18.Text)){
	vTotalNbr = vTotalNbr + Double.Parse(NbrRooms18.Text);
}

saleso.TotalNbrRooms = int.Parse(vTotalNbr.ToString());
this.TotalNbrRooms.Text = vTotalNbr.ToString();
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction></QFTextBox></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">None</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms"><QFButton xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>1</Column><Row>21</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>QFButtonOK</ControlId><DataBindings /><ControlLabelPlacement>none</ControlLabelPlacement><CaptionAlignment>center</CaptionAlignment><StyleScheme>slxbutton</StyleScheme><ButtonType>StandardButton</ButtonType><Image /><OnClientClick /><OnClickAction><ResourceKey>QFButtonOK</ResourceKey><RootActionName>BusinessRuleAction</RootActionName><Action><BusinessRule>Save</BusinessRule><Object>SORoomBlockType</Object><Parameters /><PassResultsToNextAction>False</PassResultsToNextAction><OnCompleteActionName>CSharpSnippetAction</OnCompleteActionName><OnComplete><CSharpCodeSnippet><![CDATA[



Response.Redirect("SalesOrder.aspx?entityId=" + txtSOID.Text);
]]></CSharpCodeSnippet></OnComplete></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>DialogOK</DialogActionResult><PerformsUpdate>True</PerformsUpdate><AppliedSecurity /></OnClickAction></QFButton></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRoomRevenue</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>2</Row><IsReadOnly>true</IsReadOnly><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>ActualRoomRevenue</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRoomRevenue</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRoomRevenue</ResourceKey><RootActionName>NoActionAction</RootActionName><Action /><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue1</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>3</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>19</TabIndex><ControlId>ActualRevenue1</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue1</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue1</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue2</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>4</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>20</TabIndex><ControlId>ActualRevenue2</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue2</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue2</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue3</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>5</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>21</TabIndex><ControlId>ActualRevenue3</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue3</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue3</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue4</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>6</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>22</TabIndex><ControlId>ActualRevenue4</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue4</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue4</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue5</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>7</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>23</TabIndex><ControlId>ActualRevenue5</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue5</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue5</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue6</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>8</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>24</TabIndex><ControlId>ActualRevenue6</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue6</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue6</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue7</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>9</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>25</TabIndex><ControlId>ActualRevenue7</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue7</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue7</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue8</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>10</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>26</TabIndex><ControlId>ActualRevenue8</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue8</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue8</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue9</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>11</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>27</TabIndex><ControlId>ActualRevenue9</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue9</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue9</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String"></Property>
        <Property name="EntityNamespace" type="System.String"></Property>
        <Property name="EntityAssemblyName" type="System.String"></Property>
        <Property name="DefaultNamespace" type="System.String"></Property>
        <Property name="AssemblyName" type="System.String"></Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="DesignerDisplayMember" type="System.String"></Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>12</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>28</TabIndex><ControlId>ActualRevenue10</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue10</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue10</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue11</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>13</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>29</TabIndex><ControlId>ActualRevenue11</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue11</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue11</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue12</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>14</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>30</TabIndex><ControlId>ActualRevenue12</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue12</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue12</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue13</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>15</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>31</TabIndex><ControlId>ActualRevenue13</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue13</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue13</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue14</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>16</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>32</TabIndex><ControlId>ActualRevenue14</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue14</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue14</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue15</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>17</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>33</TabIndex><ControlId>ActualRevenue15</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue15</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue15</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue16</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>18</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>34</TabIndex><ControlId>ActualRevenue16</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue16</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue16</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String"></Property>
        <Property name="EntityNamespace" type="System.String"></Property>
        <Property name="EntityAssemblyName" type="System.String"></Property>
        <Property name="DefaultNamespace" type="System.String"></Property>
        <Property name="AssemblyName" type="System.String"></Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="DesignerDisplayMember" type="System.String"></Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>19</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>35</TabIndex><ControlId>ActualRevenue17</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue17</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue17</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">Property</Property>
        <Property name="EntityTypeName" type="System.String">ISORoomBlockType</Property>
        <Property name="EntityNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityAssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
        <Property name="EntityReferenceName" type="System.String"></Property>
        <Property name="ValueMember" type="System.String">ActualRevenue18</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls"><QFSLXCurrency xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>20</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>36</TabIndex><ControlId>ActualRevenue18</ControlId><DataBindings><QuickFormPropertyDataBindingDefinition><DataSourceID>MainEntity</DataSourceID><DataItemName>ActualRevenue18</DataItemName><ControlItemName>Text</ControlItemName><FormatString /><NullValueString /></QuickFormPropertyDataBindingDefinition></DataBindings><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><OnChangeAction><ResourceKey>ActualRevenue18</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Sage.Entity.Interfaces.ISORoomBlockType saleso = this.BindingSource.Current as Sage.Entity.Interfaces.ISORoomBlockType;
//Revenue
double vTotalActRev = 0;

if (!String.IsNullOrEmpty(ActualRevenue1.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue1.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue2.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue2.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue3.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue3.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue4.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue4.Text);
}
if (!String.IsNullOrEmpty(ActualRevenue5.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue5.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue6.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue6.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue7.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue7.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue8.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue8.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue9.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue9.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue10.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue10.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue11.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue11.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue12.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue12.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue13.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue13.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue14.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue14.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue15.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue15.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue16.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue16.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue17.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue17.Text);
} 
if (!String.IsNullOrEmpty(ActualRevenue18.Text)){
	  vTotalActRev = vTotalActRev + Double.Parse(ActualRevenue18.Text);
} 

saleso.ActualRoomRevenue = Decimal.Parse(vTotalActRev.ToString());
this.ActualRoomRevenue.Text = String.Format("{0:0.00}",vTotalActRev);
]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>False</PerformsUpdate><AppliedSecurity /></OnChangeAction><ExchangeRateType>BaseRate</ExchangeRateType></QFSLXCurrency></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">None</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms"><QFButton xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>2</Column><Row>21</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>QFButtonCancel</ControlId><DataBindings /><ControlLabelPlacement>none</ControlLabelPlacement><CaptionAlignment>center</CaptionAlignment><StyleScheme>slxbutton</StyleScheme><ButtonType>StandardButton</ButtonType><Image /><OnClientClick /><OnClickAction><ResourceKey>QFButtonCancel</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[Response.Redirect("SalesOrder.aspx?entityId=" + txtSOID.Text);]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>DialogCancel</DialogActionResult><PerformsUpdate>True</PerformsUpdate><AppliedSecurity /></OnClickAction></QFButton></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
  </QuickFormElements>
  <QuickFormToolElements />
</QuickFormDefinition>